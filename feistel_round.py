"""
Split the Input Data into Left and Right Halves: 
You start with a 64-bit block of data. Split this block into two 32-bit halves, 
left_half and right_half (use masking and shifting)

Expand the Right Half using the E-box: 
The right half (32 bits) needs to be expanded to 48 bits using the E-box. 

Use the general permute function with the E-box table: 
expanded_right = permute(right_half, e_box_table, 32)

Mix the Expanded Right Half with the Round Key: 
XOR the 48-bit expanded right half with the 48-bit round key generated by your key scheduling algorithm.

Substitute Using S-boxes: This is code you've already written. Something like:
substituted_data = s_boxes(mixed_data)
"""

def split_input_data(input_data):
    left_half = (left_half << shift_schedule[round_num] & 0xfffffff) | (left_half >> (28 - shift_schedule[round_num]))
    right_half = (right_half << shift_schedule[round_num] & 0xfffffff) | (right_half >> (28 - shift_schedule[round_num]))